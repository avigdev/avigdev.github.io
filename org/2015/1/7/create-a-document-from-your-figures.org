* create a document from your figures 
  :PROPERTIES:
  :date:     2015/1/7 20:42:00
  :categories: latex,workflow
  :updated:  2015/01/11 13:05:40
  :END:

A part of the scientific workflow is creating images and categorizing them into directories. In our little parties, we scientist show these images to each other and brag about our ability to create more. It is therefore very useful to have bundles of these in pdf or html files (depending on the kind of party).

Here's how to create a pdf (using LaTeX) :

#+BEGIN_SRC perl -n :exports code :eval never
#!/usr/bin/perl -nw 
## syntax : ls fig_patterns | latexfigs.pl > latexfile
chomp();
print "\\begin\{figure\}\n\\centering\n\\includegraphics\[scale=1.2,angle=0\]\{$_\}\n";
s/_/\\_/g;
print "\\caption\{$_\}\n\\end\{figure\}\n\\clearpage\n";
#+END_SRC

and Here's how to create a html : 

#+BEGIN_SRC perl -n :exports code :eval never
#!/usr/bin/perl -nw 
## syntax : ls fig_patterns | htmlfigs.pl > htmlfile
chomp();
print "<IMG src=\"$_\" width=650><BR>\n";
print "$_<BR><BR>\n";
#+END_SRC

After some time, you may want to make a section in your book/paper from each directory.

here's the LaTeX version : 
#+BEGIN_SRC perl -n :exports code :eval never
#!/usr/bin/perl -w 
## syntax : anchor_latex.pl "tag" "text" >> file.latex
$tag=shift or die "syntax error: anchor_latex.pl \"tag\" \"text\">>file.latex\n";
$text=shift or die "syntax error: anchor_latex.pl \"tag\" \"text\">>file.latex\n";
print "\\section{$text}\\label{sec:$tag}\n";
#+END_SRC

and here's the html :
#+BEGIN_SRC perl -n :exports code :eval never
#!/usr/bin/perl -w 
## syntax : anchor_html.pl "tag" "text" >> file.html
$tag=shift or die "syntax error: anchor_html.pl \"tag\" \"text\">>file.html\n";
$text=shift or die "syntax error: anchor_html.pl \"tag\" \"text\">>file.html\n";
print "<a id=\"$tag\"><h2>$text</h2></a>\n";
#+END_SRC

you can include a template for a latexfile in your home directory : 
#+BEGIN_SRC latex -n :exports code :eval never
\documentclass[A4paper]{article}
\usepackage{graphicx}
\usepackage{cite}
\usepackage{placeins} % floatbarrier definition
\usepackage[caption=false]{subfig}
\usepackage{fullpage}
\newcommand{\unit}[1]{\ensuremath{\, \mathrm{#1}}}
\begin{document}
TEXT
\end{document}
#+END_SRC

and substitute your created latex code into the *TEXT* part, using perl again : 
#+BEGIN_SRC perl -n :exports code :eval never
#!/usr/bin/perl -w 
# syntax : merge_latex_tmpl.pl tmpfile > merged_file.tex
$tmplfilename=$ENV{'LATEXTMPL'};
$filename=shift // die "syntax error";
open TMPL,"<$tmplfilename" // die "could not find the template file";
open FILE,"<$filename" // die "could not find the file $filename";
$uniq_content = join("", <FILE>); 
while(<TMPL>){
    if(/TEXT/){
        print $uniq_content;
    }else{
        print;
    }
}
#+END_SRC
 
where /LATEXTMPL/ is an environment variable, telling your script the location of your template. I like templates, and I clutter quite a bit as hidden files in my home directory. Do you do it differently ? 
