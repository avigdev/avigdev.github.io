* matlab subplots packed densely together
  :PROPERTIES:
  :date:     2015/01/11 07:15:21
  :categories: matlab,octave,GMT,xmgr
  :updated:  2015/01/12 20:03:08
  :END:

During significant portion of my grad-school I had to travel a lot. I therefore couldn't rely on hooking to the university matlab license, so I searched for free alternatives. While you could use a lot of good projects, such as [[https://www.gnu.org/software/octave/][octave]] to crunch your numbers, it seems to me that making beautiful figures is not so easy.

I got used to plotting with the excellent packages of [[http://gmt.soest.hawaii.edu][GMT]]. I even wrote [[https://sourceforge.net/projects/octgmt/][some little octave wrapper functions]] around GMT, since it's easy to get intimidated by their too elaborate man pages. You could still try them out, though GMT has been working lately on an official [[http://gmt.soest.hawaii.edu/projects/gmt-matlab-octave-api][matlab API]] for you (they do have mature API for c++/Fortran). I didn't try it myself, yet. Another option is good old [[http://plasma-gate.weizmann.ac.il/Grace/][xmgr]]. Both of them produce great imagery, but they have their limitations at times. 

The one point where matlab excels is /better set of default parameters/. You don't have to worry so much about the line thicknesses, page width etc., as much as in the other options mentioned above. The cons side, obviously, is when you don't want the defaults. Easy things like packing your subplots close are not so easy in matlab. It's of course, nevertheless, still possible. Mainly with axis/plot handles.

Here's how you do it : 
first let's create our figs:
#+BEGIN_SRC matlab -n :exports code :eval never-export :session
nsubs=3;
for isub=1:nsubs
 subplot(nsubs,1,isub);
 plot(rands(3,100)');
 set(gca,'fontsize',16);
end % for i=1:nsubs
savefigs('nopack_subplots','save demo of packed graphs',[]);
#+END_SRC

#+RESULTS:
: org_babel_eoe

that's the result: 

#+CAPTION: before
#+NAME:   fig:nopack
[[file:nopack_subplots.png]]

now , lets pack them:
#+BEGIN_SRC matlab -n :exports code :eval never-export :session
packing_const=0.06
for isub=1:nsubs
 h=subplot(nsubs,1,isub);p = get(h, 'pos');
 if(isub<nsubs)
  set(gca,'fontsize',16,'XTickLabelMode', 'Manual','XTickLabel', []);
 else %  if(isub<nsubs)
  set(gca,'fontsize',16);
 end %  if(isub<nsubs) ... else ...
 set(h,'pos',[p(1) p(2) p(3) p(4)+packing_const]);
end % for isub=1:nsubs
savefigs('pack_subplots','save demo of packed graphs',[]);
#+END_SRC

#+RESULTS:
: org_babel_eoe

that's our "after" exhibit : 

#+CAPTION: after
#+NAME:   fig:pack
[[file:pack_subplots.png]]

The "savefigs" function is non standard. Its aim is to save images in fig/eps/png formats at once, and generate README file and a mat file on the fly, with consistent names. 
